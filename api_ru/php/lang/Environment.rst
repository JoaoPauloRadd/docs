Environment
--------------------

.. include:: /api_ru.desc/php/lang/Environment.header.rst

.. php:class:: php\\lang\\Environment

 Class Environment



**Constants**

----------

 .. php:const:: CONCURRENT

 .. php:const:: HOT_RELOAD



**Methods**

----------

 .. php:method:: __construct($parent = NULL, $flags = 0)

  :param $parent: :doc:`php\\lang\\Environment </api_ru/php/lang/Environment>` 
  :param $flags: :doc:`int </api_ru/.types/int>`  - Environment::HOT_RELOAD, Environment::CONCURRENT

 .. php:method:: execute($runnable)

  –í—ã–ø–æ–ª–Ω—è–µ—Ç $runnable –≤ —Ç–µ–∫—É—â–µ–º —Å–≤–æ–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏

  :param $runnable: :doc:`callable </api_ru/.types/callable>`  - - in new environment
  :returns: :doc:`mixed </api_ru/.types/mixed>` 

 .. php:method:: importClass($className)

  –?–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å –≤ —Å–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ

  **throws** :doc:`php\\lang\\\\Exception </api_ru/php/lang//Exception>` - if class not found or already registered

  :param $className: :doc:`string </api_ru/.types/string>` 

 .. php:method:: exportClass($className)

  –≠–∫–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å –∏–∑ —Å–≤–æ–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

  **throws** :doc:`php\\lang\\\\Exception </api_ru/php/lang//Exception>` - if class not found or already registered

  :param $className: :doc:`string </api_ru/.types/string>` 

 .. php:method:: importFunction($functionName)

  –?–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ

  **throws** :doc:`php\\lang\\\\Exception </api_ru/php/lang//Exception>` –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–∞

  :param $functionName: :doc:`string </api_ru/.types/string>` 

 .. php:method:: exportFunction($functionName)

  –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ —Å–≤–æ–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

  **throws** :doc:`php\\lang\\\\Exception </api_ru/php/lang//Exception>` –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–∞

  :param $functionName: :doc:`string </api_ru/.types/string>` 

 .. php:method:: defineConstant($name, $value, $caseSensitive = true)

  **throws** :doc:`php\\lang\\\\Exception </api_ru/php/lang//Exception>` - if constant already registered or value is not scalar type

  :param $name: :doc:`string </api_ru/.types/string>` 
  :param $value: :doc:`mixed </api_ru/.types/mixed>`  - - scalar value
  :param $caseSensitive: :doc:`bool </api_ru/.types/bool>` 

 .. php:method:: onMessage($callback)

  –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ –±—ã–ª–∏ –ø–æ—Å–ª–∞–Ω—ã –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ

  :param $callback: :doc:`callable </api_ru/.types/callable>` 

 .. php:method:: sendMessage($message)

  –ü–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—é

  :param $message: :doc:`mixed </api_ru/.types/mixed>` 
  :returns: :doc:`mixed </api_ru/.types/mixed>` 

 .. php:staticmethod:: current()

  –í–∑—è—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

  :returns: :doc:`php\\lang\\Environment </api_ru/php/lang/Environment>` 



.. include:: /api_ru.desc/php/lang/Environment.footer.rst

